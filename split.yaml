# IRC parser tests
# splitting, turning server strings into output

# most of the tests in here originate from grawity's test vectors
# https://github.com/grawity/code/tree/master/lib/tests

tests:
  # input is the string coming directly from the server to parse

  # the atoms dict has the keys:
  #   * tags: tags dict
  #       tags with no value have a value of true
  #       tags with no value after = sign have a value of empty string
  #   * source: source string, without single leading colon
  #   * verb: verb string
  #   * params: params split up as a list
  # if the params key does not exist, assume it is empty
  # if any other keys do no exist, assume they are null
  # a key that is null does not exist or is not specified with the
  #   given input string

  # simple
  - input: "foo bar baz asdf"
    atoms:
      verb: "foo"
      params:
        - "bar"
        - "baz"
        - "asdf"

  # with source
  - input: ":coolguy foo bar baz asdf"
    atoms:
      source: "coolguy"
      verb: "foo"
      params:
        - "bar"
        - "baz"
        - "asdf"

  # with trailing param
  - input: "foo bar baz :asdf quux"
    atoms:
      verb: "foo"
      params:
        - "bar"
        - "baz"
        - "asdf quux"
  
  - input: "foo bar baz :"
    atoms:
      verb: "foo"
      params:
        - "bar"
        - "baz"
        - ""
  
  - input: "foo bar baz ::asdf"
    atoms:
      verb: "foo"
      params:
        - "bar"
        - "baz"
        - ":asdf"

  # with source and trailing param
  - input: ":coolguy foo bar baz :asdf quux"
    atoms:
      source: "coolguy"
      verb: "foo"
      params:
        - "bar"
        - "baz"
        - "asdf quux"

  # with tags and source
  - input: "@c;h=;a=b :quux ab cd"
    atoms:
      tags:
        "c": true
        "h": ""
        "a": "b"
      source: "quux"
      verb: "ab"
      params:
        - "cd"
