# IRC parser tests
# splitting nickmasks into atoms

tests:
  # source is the mask directly

  # the atoms dict has the keys:
  #   * nick: nick string
  #   * user: user string
  #   * host: host string
  # if a key does not exist, assume it is an empty string

  # simple
  - source: "coolguy!ag@127.0.0.1"
    atoms:
      nick: "coolguy"
      user: "ag"
      host: "127.0.0.1"

  - source: "coolguy!~ag@localhost"
    atoms:
      nick: "coolguy"
      user: "~ag"
      host: "localhost"

  # without atoms
  - source: "!ag@127.0.0.1"
    atoms:
      user: "ag"
      host: "127.0.0.1"

  - source: "coolguy!@127.0.0.1"
    atoms:
      nick: "coolguy"
      host: "127.0.0.1"

  - source: "coolguy@127.0.0.1"
    atoms:
      nick: "coolguy"
      host: "127.0.0.1"

  - source: "coolguy!ag@"
    atoms:
      nick: "coolguy"
      user: "ag"

  - source: "coolguy!ag"
    atoms:
      nick: "coolguy"
      user: "ag"

  # weird control codes, does happen
  - source: "coolguy!ag@net\x035w\x03ork.admin"
    atoms:
      nick: "coolguy"
      user: "ag"
      host: "net\x035w\x03ork.admin"

  - source: "coolguy!~ag@n\x02et\x0305w\x0fork.admin"
    atoms:
      nick: "coolguy"
      user: "~ag"
      host: "n\x02et\x0305w\x0fork.admin"
